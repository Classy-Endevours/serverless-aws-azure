name: Deploy azure functions

on:
  push:
    branches:
      - main
      - azure

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Serverless azure export
      run: |
        export AZURE_SUBSCRIPTION_ID=${{secrets.AZURE_SUBSCRIPTION_ID}}
        export AZURE_TENANT_ID=${{secrets.AZURE_TENANT_ID}}
        export AZURE_CLIENT_ID=${{secrets.AZURE_CLIENT_ID}}
        export AZURE_CLIENT_SECRET=${{secrets.AZURE_CLIENT_SECRET}}
    - name: Install Serverless Framework
      run: npm install -g serverless
    - name: Create env file
      run: | # cp sample.env.yml env.yml
        cat > env.yml << EOF
        ${{ secrets.ENV }}
        EOF
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install NPM dependencies
      run: yarn install --frozen-lockfile && SLS_DEBUG=*
    - name: Generate prisma 
      run: yarn gen
    - name: 'Az CLI login'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Package SLS
      run: serverless package
    - name: Deploy zip to azure
      run: az functionapp deployment source config-zip -g ${{ secrets.AZURE_RESOURCE_GROUP }} -n  ${{ secrets.AZURE_APP_SERVICE_NAME }} --src .serverless/serverless-node-azure-aws.zip
